import * as BN from "bn.js";
import { PailPrivKey, PailPubKey } from '@safeheron/crypto-paillier';
import { PailProof, Secp256k1SchnorrProof } from "@safeheron/crypto-zkp";
import { Message1 } from "./message1";
import { Message2 } from "./message2";
import { Message3 } from "./message3";
import { KeyShare1 } from "./keyShare1";
declare type TCurvePoint = any;
export declare class P1Context {
    private expectedStep;
    readonly pailPrivKey: PailPrivKey;
    readonly pailPubKey: PailPubKey;
    x1: BN;
    Q1: TCurvePoint;
    Q: TCurvePoint;
    blind: BN;
    commitment_Q1: BN;
    cypher_x1: BN;
    proof_Q1: Secp256k1SchnorrProof;
    proof_pailN: PailProof;
    message1: Message1;
    message2: Message2;
    message3: Message3;
    constructor(pailPrivKey: PailPrivKey, pailPubKey: PailPubKey, x1: BN, Q1: TCurvePoint, blind: BN, commitment_Q1: BN, cypher_x1: BN, proof_Q1: Secp256k1SchnorrProof, proof_pailN: PailProof);
    static createContext(): Promise<P1Context>;
    step1(): Uint8Array;
    step2(message2Bytes: Uint8Array): Uint8Array;
    exportKeyShare(): KeyShare1;
}
export {};
